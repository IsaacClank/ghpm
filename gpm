#!/usr/bin/env bash
set -eo pipefail
IFS=$'\n\t'

HUB="$HOME/.local"

handle_search() {
  if [ $# -eq 0 ]; then
    cat <<EOF

Usage: gpm search <query>

EOF
    exit 0
  fi

  # Prepare request
  local query="$@"
  local results_page=1
  local results_per_page=10
  local url="https://api.github.com/search/repositories?q=$query&per_page=$results_per_page&page=$results_page"

  # Execute request
  local results=$(curl --silent "$url")

  # Handle no results
  local results_count=$(echo $results | jq '.total_count')
  [ $results_count -eq 0 ] && printf "Not found\n" && exit 1

  echo $results | jq '.items' > /tmp/gpm_search_results.json # Store restuls in a temporary file

  local selection=$(cat /tmp/gpm_search_results.json\
    | jq -r '.[].full_name'\
    | fzf --layout=reverse --no-border --no-scrollbar --height=~25 --preview='cat /tmp/gpm_search_results.json | jq {description:\.[{n}].description\,url:.[{n}].html_url}' --preview-window=down:border-top:20\
  )

  echo $selection
}

handle_install() {
  if [ $# -eq 0 ]; then
    cat <<EOF

Usage: gpm install <repository>

EOF
  exit 0
  fi

  local repository="$1"

  local author_name=$(echo $repository | awk -F/ '{ print $1 }')
  local package_name=$(echo $repository | awk -F/ '{ print $2 }')

  local package_root="$HUB/opt/${author_name}__${package_name}"

  local latest_release=$(curl --silent https://api.github.com/repos/"$repository"/releases/latest)
  local latest_release_id=$(echo "$latest_release" | jq '.id')
  local local_release_id=$([ -f "$package_root/meta" ] && cat "$package_root/meta")

  if [ "$local_release_id" == "$latest_release_id" ]; then
    printf "Already up-to-date\n"
    exit 0
  fi

  local url=$(echo "$latest_release" | jq -r ".assets[] | .browser_download_url" | fzf --layout=reverse --no-border --no-scrollbar --height=25)
  local archive=$(echo "$url" | awk -F/ '{ print $NF }')
  local extension=$(echo "$archive" | awk -F. '{ print $NF }')

  curl --output-dir /tmp -LO "$url"
  mkdir -p "$package_root"

  case $extension in
    'gz'|'xz')
      tar -xf "/tmp/$archive" --directory="$package_root"
      ;;

    'zip')
      unzip "/tmp/$archive" -d "$package_root"
      ;;

    *)
      chmod +x /tmp/"$archive" && mkdir -p "$package_root" && mv /tmp/"$archive" "$package_root"
      ;;
  esac

  local exectuable_path=$(find $package_root -type f | fzf --layout=reverse --no-border --no-scrollbar --height=25)

  local link_name=''
  read -p 'Name of link (default to selected executable): ' link_name
  link_name=${link_name:-$(basename $exectuable_path)}

  ln -sf $exectuable_path $HUB/bin/$link_name
}

main() {
  if [ $# -eq 0 ]; then
    cat <<end-of-help

Usage: gpm COMMAND ARGS

Utiltity for installing packages from GitHub release

Commands:
  install     Install a package
  search      Search for a package

end-of-help
    exit
  fi

  local command="$1" && shift 1
  handle_$command "$@"
}

main "$@"
